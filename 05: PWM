Code below and use pic 05 to see the circuit construction
This program sets up Timer/Counter0 on an AVR microcontroller in Fast PWM mode to 
generate a PWM signal on pin PD6 (OC0A).
The timer runs in the background, incrementing its counter register (TCNT0) based on the 
system clock and the configured prescaler.
When the counter matches the value in the Output Compare Register (OCR0A), the hardware 
toggles the output pin (PD6) according to the non-inverting mode configuration (COM0A1).


#include <avr/io.h>

int main()
{
	DDRD = (1<<PD6); // Pin PD6 becomes an output (OC0A)

    	// Configure Timer/Counter Control Register A
    	// - Clear OC0A on compare match, set OC0A at bottom (non-inverting mode)
    	// - Fast PWM mode (WGM02:WGM00 = 0b011)
    	TCCR0A |= (1<<COM0A1);
    	TCCR0A |= (1<<WGM01) | (1<<WGM00); // Fast PWM mode

	// Set the compare match value to control the duty cycle
    	OCR0A = 0xFF; // Maximum duty cycle (100%)

    	// Configure Timer/Counter Control Register B
    	// - No prescaler (Clock Select Bit = 0b001)
    	TCCR0B |= (1<<CS00);

    	while (1) {
        	// Main loop
    	}
	
	

	return 0;
}

for mkr
void setup() {
  pinMode(9, OUTPUT);  // Yellow LED
  pinMode(8, OUTPUT);  // Red LED
  digitalWrite(9, LOW); // Start with LEDs OFF
  digitalWrite(8, LOW);

}

void loop() {
  for (int i = 255; i >= 0; i -= 5) {
    analogWrite(9, i); // Gradually increase brightness
    delay(20);
  }
  for (int i = 255; i >= 0; i -= 5) {
    analogWrite(8, i); // Gradually decrease brightness
    delay(20);
  }
}

